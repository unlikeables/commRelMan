(function() {
  var Cmd, Q, exec, path;

  exec = require("child_process").exec;

  path = require("path");

  Q = require("q");

  Cmd = (function() {
    function Cmd() {
      this.baseDir = path.resolve(".");
    }

    Cmd.prototype.cd = function(dir) {
      this.baseDir = path.resolve(dir);
      return this;
    };

    Cmd.prototype.exec = function(cmd, callback) {
      var deferred;
      if (typeof callback !== "function") {
        callback = null;
      }
      deferred = Q.defer();
      exec("cd " + this.baseDir + " && " + cmd, function(err, out, code) {
        if (err) {
          deferred.reject(new Error(err));
          if (callback) {
            return callback(err, {
              message: out,
              exitCode: code
            });
          }
        } else {
          deferred.resolve({
            message: out,
            exitCode: code
          });
          if (callback) {
            return callback(null, {
              message: out,
              exitCode: code
            });
          }
        }
      });
      return deferred.promise;
    };

    Cmd.init = function() {
      return new Cmd;
    };

    return Cmd;

  })();

  module.exports = Cmd;

}).call(this);
